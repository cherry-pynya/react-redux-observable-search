{"ast":null,"code":"import { filter } from 'rxjs/operators';\nimport { warn } from './utils/console';\n\nvar keyHasType = function (type, key) {\n  return type === key || typeof key === 'function' && type === key.toString();\n};\n/**\n * Inferring the types of this is a bit challenging, and only works in newer\n * versions of TypeScript.\n *\n * @param ...types One or more Redux action types you want to filter for, variadic.\n */\n\n\nexport function ofType() {\n  var types = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    types[_i] = arguments[_i];\n  }\n\n  var len = types.length;\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (len === 0) {\n      warn('ofType was called without any types!');\n    }\n\n    if (types.some(function (key) {\n      return key === null || key === undefined;\n    })) {\n      warn('ofType was called with one or more undefined or null values!');\n    }\n  }\n\n  return filter(len === 1 ? function (action) {\n    return keyHasType(action.type, types[0]);\n  } : function (action) {\n    for (var i = 0; i < len; i++) {\n      if (keyHasType(action.type, types[i])) {\n        return true;\n      }\n    }\n\n    return false;\n  });\n}","map":{"version":3,"sources":["/Users/nikitacerepna/Desktop/netology/react/observable/react-redux-observable-search/node_modules/redux-observable/dist/esm/operators.js"],"names":["filter","warn","keyHasType","type","key","toString","ofType","types","_i","arguments","length","len","process","env","NODE_ENV","some","undefined","action","i"],"mappings":"AAAA,SAASA,MAAT,QAAuB,gBAAvB;AACA,SAASC,IAAT,QAAqB,iBAArB;;AACA,IAAIC,UAAU,GAAG,UAAUC,IAAV,EAAgBC,GAAhB,EAAqB;AAClC,SAAOD,IAAI,KAAKC,GAAT,IAAiB,OAAOA,GAAP,KAAe,UAAf,IAA6BD,IAAI,KAAKC,GAAG,CAACC,QAAJ,EAA9D;AACH,CAFD;AAGA;AACA;AACA;AACA;AACA;AACA;;;AACA,OAAO,SAASC,MAAT,GAAkB;AACrB,MAAIC,KAAK,GAAG,EAAZ;;AACA,OAAK,IAAIC,EAAE,GAAG,CAAd,EAAiBA,EAAE,GAAGC,SAAS,CAACC,MAAhC,EAAwCF,EAAE,EAA1C,EAA8C;AAC1CD,IAAAA,KAAK,CAACC,EAAD,CAAL,GAAYC,SAAS,CAACD,EAAD,CAArB;AACH;;AACD,MAAIG,GAAG,GAAGJ,KAAK,CAACG,MAAhB;;AACA,MAAIE,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACvC,QAAIH,GAAG,KAAK,CAAZ,EAAe;AACXV,MAAAA,IAAI,CAAC,sCAAD,CAAJ;AACH;;AACD,QAAIM,KAAK,CAACQ,IAAN,CAAW,UAAUX,GAAV,EAAe;AAAE,aAAOA,GAAG,KAAK,IAAR,IAAgBA,GAAG,KAAKY,SAA/B;AAA2C,KAAvE,CAAJ,EAA8E;AAC1Ef,MAAAA,IAAI,CAAC,8DAAD,CAAJ;AACH;AACJ;;AACD,SAAOD,MAAM,CAACW,GAAG,KAAK,CAAR,GACR,UAAUM,MAAV,EAAkB;AAAE,WAAOf,UAAU,CAACe,MAAM,CAACd,IAAR,EAAcI,KAAK,CAAC,CAAD,CAAnB,CAAjB;AAA2C,GADvD,GAER,UAAUU,MAAV,EAAkB;AAChB,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGP,GAApB,EAAyBO,CAAC,EAA1B,EAA8B;AAC1B,UAAIhB,UAAU,CAACe,MAAM,CAACd,IAAR,EAAcI,KAAK,CAACW,CAAD,CAAnB,CAAd,EAAuC;AACnC,eAAO,IAAP;AACH;AACJ;;AACD,WAAO,KAAP;AACH,GATQ,CAAb;AAUH","sourcesContent":["import { filter } from 'rxjs/operators';\nimport { warn } from './utils/console';\nvar keyHasType = function (type, key) {\n    return type === key || (typeof key === 'function' && type === key.toString());\n};\n/**\n * Inferring the types of this is a bit challenging, and only works in newer\n * versions of TypeScript.\n *\n * @param ...types One or more Redux action types you want to filter for, variadic.\n */\nexport function ofType() {\n    var types = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        types[_i] = arguments[_i];\n    }\n    var len = types.length;\n    if (process.env.NODE_ENV !== 'production') {\n        if (len === 0) {\n            warn('ofType was called without any types!');\n        }\n        if (types.some(function (key) { return key === null || key === undefined; })) {\n            warn('ofType was called with one or more undefined or null values!');\n        }\n    }\n    return filter(len === 1\n        ? function (action) { return keyHasType(action.type, types[0]); }\n        : function (action) {\n            for (var i = 0; i < len; i++) {\n                if (keyHasType(action.type, types[i])) {\n                    return true;\n                }\n            }\n            return false;\n        });\n}\n"]},"metadata":{},"sourceType":"module"}