{"ast":null,"code":"import { getXHRResponse } from './getXHRResponse';\n\nvar AjaxResponse = function () {\n  function AjaxResponse(originalEvent, xhr, request, type) {\n    if (type === void 0) {\n      type = 'download_load';\n    }\n\n    this.originalEvent = originalEvent;\n    this.xhr = xhr;\n    this.request = request;\n    this.type = type;\n    var status = xhr.status,\n        responseType = xhr.responseType;\n    this.status = status !== null && status !== void 0 ? status : 0;\n    this.responseType = responseType !== null && responseType !== void 0 ? responseType : '';\n    var allHeaders = xhr.getAllResponseHeaders();\n    this.responseHeaders = allHeaders ? allHeaders.split('\\n').reduce(function (headers, line) {\n      var index = line.indexOf(': ');\n      headers[line.slice(0, index)] = line.slice(index + 2);\n      return headers;\n    }, {}) : {};\n    this.response = getXHRResponse(xhr);\n    var loaded = originalEvent.loaded,\n        total = originalEvent.total;\n    this.loaded = loaded;\n    this.total = total;\n  }\n\n  return AjaxResponse;\n}();\n\nexport { AjaxResponse };","map":{"version":3,"sources":["../../../../src/internal/ajax/AjaxResponse.ts"],"names":[],"mappings":"AACA,SAAS,cAAT,QAA+B,kBAA/B;;AAgBA,IAAA,YAAA,GAAA,YAAA;AA+CE,WAAA,YAAA,CAIkB,aAJlB,EAUkB,GAVlB,EAckB,OAdlB,EA4BkB,IA5BlB,EA4B0D;AAAxC,QAAA,IAAA,KAAA,KAAA,CAAA,EAAA;AAAA,MAAA,IAAA,GAAA,eAAA;AAAwC;;AAxBxC,SAAA,aAAA,GAAA,aAAA;AAMA,SAAA,GAAA,GAAA,GAAA;AAIA,SAAA,OAAA,GAAA,OAAA;AAcA,SAAA,IAAA,GAAA,IAAA;AAER,QAAA,MAAM,GAAmB,GAAG,CAAtB,MAAN;AAAA,QAAQ,YAAY,GAAK,GAAG,CAAR,YAApB;AACR,SAAK,MAAL,GAAc,MAAM,KAAA,IAAN,IAAA,MAAM,KAAA,KAAA,CAAN,GAAA,MAAA,GAAU,CAAxB;AACA,SAAK,YAAL,GAAoB,YAAY,KAAA,IAAZ,IAAA,YAAY,KAAA,KAAA,CAAZ,GAAA,YAAA,GAAgB,EAApC;AASA,QAAM,UAAU,GAAG,GAAG,CAAC,qBAAJ,EAAnB;AACA,SAAK,eAAL,GAAuB,UAAU,GAE7B,UAAU,CAAC,KAAX,CAAiB,IAAjB,EAAuB,MAAvB,CAA8B,UAAC,OAAD,EAAkC,IAAlC,EAAsC;AAIlE,UAAM,KAAK,GAAG,IAAI,CAAC,OAAL,CAAa,IAAb,CAAd;AACA,MAAA,OAAO,CAAC,IAAI,CAAC,KAAL,CAAW,CAAX,EAAc,KAAd,CAAD,CAAP,GAAgC,IAAI,CAAC,KAAL,CAAW,KAAK,GAAG,CAAnB,CAAhC;AACA,aAAO,OAAP;AACD,KAPD,EAOG,EAPH,CAF6B,GAU7B,EAVJ;AAYA,SAAK,QAAL,GAAgB,cAAc,CAAC,GAAD,CAA9B;AACQ,QAAA,MAAM,GAAY,aAAa,CAAzB,MAAN;AAAA,QAAQ,KAAK,GAAK,aAAa,CAAlB,KAAb;AACR,SAAK,MAAL,GAAc,MAAd;AACA,SAAK,KAAL,GAAa,KAAb;AACD;;AACH,SAAA,YAAA;AAAC,CA1GD,EAAA","sourceRoot":"","sourcesContent":["import { getXHRResponse } from './getXHRResponse';\nvar AjaxResponse = (function () {\n    function AjaxResponse(originalEvent, xhr, request, type) {\n        if (type === void 0) { type = 'download_load'; }\n        this.originalEvent = originalEvent;\n        this.xhr = xhr;\n        this.request = request;\n        this.type = type;\n        var status = xhr.status, responseType = xhr.responseType;\n        this.status = status !== null && status !== void 0 ? status : 0;\n        this.responseType = responseType !== null && responseType !== void 0 ? responseType : '';\n        var allHeaders = xhr.getAllResponseHeaders();\n        this.responseHeaders = allHeaders\n            ?\n                allHeaders.split('\\n').reduce(function (headers, line) {\n                    var index = line.indexOf(': ');\n                    headers[line.slice(0, index)] = line.slice(index + 2);\n                    return headers;\n                }, {})\n            : {};\n        this.response = getXHRResponse(xhr);\n        var loaded = originalEvent.loaded, total = originalEvent.total;\n        this.loaded = loaded;\n        this.total = total;\n    }\n    return AjaxResponse;\n}());\nexport { AjaxResponse };\n//# sourceMappingURL=AjaxResponse.js.map"]},"metadata":{},"sourceType":"module"}